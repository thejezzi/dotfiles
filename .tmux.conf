# ==============================================================================
# General Configuration
# ==============================================================================

# --- Behavior ---
# Set the default terminal to support 256 colors
set -g default-terminal "screen-256color"
# Enable mouse support
set -g mouse on
# Start window and pane numbering from 1 for easier access
set -g base-index 1
setw -g pane-base-index 1
# Renumber windows automatically when one is closed
set -g renumber-windows on
# Use Vi keybindings in copy mode
set-window-option -g mode-keys vi
# Allow tmux to set the system clipboard
set -g set-clipboard on

# --- Prefix ---
# Unbind the default prefix C-b
unbind C-b
# Set the new prefix to C-i
set -g prefix C-z
# Bind C-i to send the prefix to nested tmux sessions
bind-key C-z send-prefix

# ==============================================================================
# Keybindings
# ==============================================================================

# Reload tmux configuration with <prefix> r
unbind r
bind r source-file ~/.tmux.conf \; display-message "Reloaded tmux config!"

# --- Panes ---
# Split panes with German keyboard layout keys
# Split panes using - for horizontal and _ for vertical
# This works consistently across different keyboard layouts
unbind %
unbind '"'
bind - split-window -h
bind _ split-window -v

# Switch panes with capital letters (easier than prefix + arrow keys)
bind H select-pane -L
bind J select-pane -D
bind K select-pane -U
bind L select-pane -R

# Resize panes with repeatable keys
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

# Swap pane positions
bind-key C-j swap-pane -D
bind-key C-k swap-pane -U

# Rotate windows
bind-key C-h rotate-window
bind-key C-l rotate-window

# --- Pane Joining ---
# These bindings allow you to move panes between different windows and sessions.
#
# How to PULL a pane from another window into the current one:
# 1. Press <prefix> + p
# 2. At the prompt, enter the source pane's identifier (e.g., 2.1 or othersession:1.2)
#
# How to PUSH the current pane to another window:
# 1. Press <prefix> + P (Shift + p)
# 2. At the prompt, enter the target window's identifier (e.g., 2 or othersession:1)
bind-key p command-prompt -p "Pull pane from (session:window.pane):" "join-pane -s '%%'"
bind-key P command-prompt -p "Push pane to (session:window):" "join-pane -t '%%'"

# Toggle pane zoom
bind -r m resize-pane -Z

# Move current pane to a new window
bind ! break-pane

# Choose window interactively
bind w choose-window

# --- Scratchpad ---
# Create a popup scratchpad window
bind e display-popup -E "tmux new-session -A -s scratch"

# --- Copy Mode (Vi bindings) ---
# Start selection with 'v'
bind-key -T copy-mode-vi 'v' send -X begin-selection
# Copy selection to system clipboard with 'y' using xclip
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard' \; display-message "Copied to system clipboard!"
# Prevent exiting copy mode after mouse drag
unbind -T copy-mode-vi MouseDragEnd1Pane

# Open opencode in a seperate session with the same path as from where it was triggered
bind C-o run-shell "tmux new-session -d -s opencode_popup -c '#{pane_current_path}' 'opencode'; \
  tmux display-popup -E -w 90% -h 90% -d '#{pane_current_path}' 'tmux attach-session -t opencode_popup'"

# ==============================================================================
# Plugins (Managed by TPM - Tmux Plugin Manager)
# ==============================================================================

# --- TPM Installation ---
# Install TPM if it's not already installed
# `git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm`

# --- Plugin List ---
# Instructions:
# <prefix> + I : Installs new plugins
# <prefix> + U : Updates existing plugins
# <prefix> + alt + u : Removes unused plugins

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator' # Seamless navigation between Vim/Nvim and tmux panes
set -g @plugin 'dracula/tmux'                  # Dracula theme
set -g @plugin 'ofirgall/tmux-window-name'      # Dynamic window names based on running process
set -g @plugin 'tmux-plugins/tmux-resurrect'   # Persist tmux sessions after a restart

# --- Plugin Configuration ---

# ofirgall/tmux-window-name
set -g @tmux_window_dir_programs "['nvim', 'vim', 'vi', 'git']"

# dracula/tmux
set -g @dracula-show-left-icon "session" # Can be "session", "hostname", "smiley", etc.
set -g @dracula-show-flags true
set -g @dracula-plugins "ram-usage git weather"
set -g @dracula-show-battery-status true
set -g @dracula-show-fahrenheit "false"
set -g @dracula-fixed-location "Dresden"
set -g @dracula-ram-usage-colors "cyan dark_gray"
set -g @dracula-weather-colors "orange dark_gray"
set -g @dracula-show-left-icon "üê± #[bold]#H/#S/#I #{?window_zoomed_flag,(Û∞õ≠),}"

# tmux-plugins/tmux-resurrect
set -g @resurrect-capture-pane-contents 'on' # Restore pane contents on resurrect
set -g @continuum-restore 'on' # (For tmux-continuum) Enable automatic restore

# ==============================================================================
# Initialize TPM (Must be at the very bottom)
# ==============================================================================
run '~/.tmux/plugins/tpm/tpm'
